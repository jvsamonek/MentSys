{"version":3,"sources":["Home/Header/LoginBox.js","Components/Request.js","Home/Header/Header.js","Home/Main/ActionBar.js","Home/Main/Tasks/Cards/CardTitle.js","Home/Main/BottomActionBar.js","Home/Main/Tasks/Task/TaskDetails.js","Home/Main/Tasks/Cards/Card.js","Home/Main/Tasks/TaskCards.js","Home/Main/Activitys/ActivityManager.js","Home/Main/News/Graph.js","Home/Main/News/InfoCard.js","Home/Main/News/News.js","Components/Select.js","Home/Main/Activitys/ActivityDetails.js","Home/Main/Alerts/AlertManager.js","Home/Main/Status/UserStatus.js","Home/Main/Main.js","Home/SideMenu/SideMenu.js","Home/Home.js","index.js"],"names":["emails","_get","Object","asyncToGenerator","regenerator_default","a","mark","_callee","path","data","getPath","request","wrap","_context","prev","next","JSON","stringify","fetch","sent","json","abrupt","stop","this","_post","_callee2","_context2","headers","Accept","Content-Type","method","body","styles","avatar","backgroundColor","blue","color","SimpleDialog","state","row","email","password","handleClose","_this","props","onClose","selectedValue","handleListItemClick","value","makeLogin","succes","user","name","localStorage","setItem","location","reload","alert","_this2","_this$props","classes","other","objectWithoutProperties","react_default","createElement","Dialog_default","assign","aria-labelledby","DialogTitle_default","id","List_default","ListItem_default","button","TextField_default","required","label","className","textField","margin","variant","onChange","e","target","type","onClick","ListItemAvatar_default","Avatar_default","ListItemText_default","primary","React","Component","SimpleDialogWrapped","withStyles","SimpleDialogDemo","_ref2","_this3","objectDestructuringEmpty","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","open","logout","content","loginStatus","parse","getItem","Button_default","Header","_Component","apply","arguments","inherits","createClass","key","style","fontSize","position","top","LoginBox","ActionBar","_ref","title","back","_ref$actions","actions","map","ActionBar_Action","action","AppBar_default","Toolbar_default","Typography_default","Action","_Component2","size","class","BottomActionBar","ActionBar_ActionBar","TaskMode","SHOW","EDIT","TaskDetails","main","mode","fetchData","loading","_fetchData","timeout","_id","startDate","Date","toISOString","slice","endDate","imagePath","Main_MainWaiting","TaskDetails_TaskDetailsEdit","setMode","bind","backToMain","TaskDetails_TaskDetailsShow","setContent","MenuCode","TASK_LIST","TaskDetailsEdit","bottomAction","saveTask","ref","_this4","defaultValue","multiline","rows","width","height","float","InputLabelProps","shrink","BottomActionBar_BottomActionBar","success","TaskDetailsShow","_ref3","_this5","deleteTask","confirm","_this6","src","alt","Card","showTaskDetails","TASK_DETAILS","editTaskDetails","Card_default","CardActionArea_default","CardContent_default","gutterBottom","component","CardActions_default","TaskCards","fecthData","createTask","_fecthData","toConsumableArray","Array","keys","n","length","message","task","Card_Card","PeopleManager","status","activity","ActivityManager_PeopleLine","PeopleLine","ListItemIcon_default","openTaskManager","Divider_default","PEOPLE_DETAILS","Graph","_React$Component","xData","yData","colors","lineSize","labels","i","result","x","y","line","result2","marker","push","layout","showlegend","xaxis","showline","showgrid","showticklabels","linecolor","linewidth","autotick","ticks","tickcolor","tickwidth","ticklen","tickfont","family","yaxis","zeroline","autosize","autoexpand","l","r","t","annotations","xref","yref","xanchor","yanchor","text","font","showarrow","react_plotly_default","config","displayModeBar","InfoCard","bars","b","InfoCard_BarInfo","BarInfo","News","InfoCard_InfoCard","Graph_Graph","SimpleSelect","options","handleChange","event","defineProperty","age","labelWidth","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","root","autoComplete","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","input","OutlinedInput_default","o","MenuItem_default","Select","theme","display","flexWrap","spacing","unit","minWidth","selectEmpty","marginTop","ActivityDetails","users","Select_Select","PEOPLE_LIST","_saveTask","AlertManager","fetchDta","_fetchDta","Math","random","reason","AlertManager_Alert","Alert","UserStatus","saveUserInfo","lastName","phone","newState","_saveUserInfo","NEWS","ALERT_LIST","STATUS","Main","menuCode","Grid_default","getMainScreen","News_News","TaskCards_TaskCards","TaskDetails_TaskDetails","ActivityManager_PeopleManager","ActivityDetails_ActivityDetails","AlertManager_AlertManager","UserStatus_UserStatus","MainWaiting","_ref$loading","CircularProgress_default","SideMenu","home","optionsData","nome","SideMenu_MenuOption","selectOption","selected","MenuOption","Home","Header_Header","SideMenu_SideMenu","Main_Main","time","Promise","setTimeout","render","Home_Home","document","getElementById"],"mappings":"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","file":"static/js/main.b7b7d31c.chunk.js","sourcesContent":["/* eslint-disable react/no-multi-comp */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Req } from '../../Components/Request';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst styles = {\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n};\r\n\r\nclass SimpleDialog extends React.Component {\r\n    state = {\r\n        row: {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n  handleClose = () => {\r\n    this.props.onClose(this.props.selectedValue);\r\n  };\r\n\r\n  handleListItemClick = value => {\r\n    this.props.onClose(value);\r\n  };\r\n  makeLogin = async () => {\r\n    //POST REQUEST {loginStatus}\r\n    //expected {success: true | false, user: {name, email}}\r\n\r\n    const data = {\r\n      succes: true,\r\n      user: {\r\n        name: 'Guilherme',\r\n        email: 'email@email.com'\r\n      }\r\n    }\r\n\r\n    if(data.succes){\r\n      localStorage.setItem('loginStatus', JSON.stringify(data.user))\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload()\r\n    }\r\n    else\r\n      alert('Não foi possivel se conectar.')\r\n  }\r\n\r\n  render() {\r\n    const { classes, onClose, selectedValue, ...other } = this.props;\r\n\r\n    return (\r\n      <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\r\n        <DialogTitle id=\"simple-dialog-title\">Se conectar como...</DialogTitle>\r\n        <div>\r\n          <List>\r\n          <ListItem button>                \r\n                <TextField\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => {this.state.row.email = e.target.value}}\r\n                />\r\n            </ListItem>\r\n            <ListItem button>                \r\n                <TextField\r\n                    required\r\n                    type=\"password\"\r\n                    id=\"outlined-required\"\r\n                    label=\"Senha\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => {this.state.row.password = e.target.value}}\r\n                />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.makeLogin()}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Entrar\" />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func,\r\n  selectedValue: PropTypes.string,\r\n};\r\n\r\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\r\n\r\nclass SimpleDialogDemo extends React.Component {\r\n    constructor({}){\r\n        super()\r\n        this.state = {\r\n            open: false,\r\n            selectedValue: emails[1],\r\n        };\r\n    }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = value => {\r\n    this.setState({ selectedValue: value, open: false });\r\n  };\r\n\r\n  render() {\r\n    const loginStatus = JSON.parse(localStorage.getItem('loginStatus'))\r\n    let content\r\n    if(loginStatus)\r\n        content = <Button onClick={this.logout}>{loginStatus.name} - DESCONECTAR</Button>\r\n    else\r\n        content = <Button onClick={this.handleClickOpen}>Login</Button>\r\n    return (\r\n      <div\r\n      className=\"login-box full\">\r\n        {content}\r\n        <SimpleDialogWrapped\r\n          selectedValue={this.state.selectedValue}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  logout = () => {\r\n    //POST REQUEST {loginStatus}\r\n    //expected {success: true | false}\r\n\r\n    const data = {\r\n      success: true\r\n    }\r\n\r\n    if(data.success){\r\n      alert(\"Você foi desconectado.\")\r\n      localStorage.setItem('loginStatus', null)\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload()\r\n    }\r\n    else\r\n      alert(\"Não foi possivel desconectar.\")\r\n  }\r\n}\r\n\r\nexport default SimpleDialogDemo;\r\n\r\n//JSON.parse(localStorage.getItem('loginStatus'))\r\n//localStorage.setItem('loginStatus', JSON.stringify({name: 'Guilherme'}))","\r\nexport const Req = {\r\n    async get(path, data){\r\n        const getPath = path + '?json=' + JSON.stringify(data)\r\n        const request = await fetch(getPath)\r\n        return await request.json()\r\n    },\r\n    async post(path, data){\r\n        const request = await fetch(path,\r\n            {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(data)\r\n            })\r\n        return await request.json()\r\n    }\r\n}","import React ,{ Component } from 'react'\r\nimport LoginBox  from './LoginBox'\r\n\r\nexport class Header extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-content\">\r\n                    <div className=\"left\" \r\n                        style={{\r\n                            fontSize: '50px',\r\n                            position: 'relative', \r\n                            top: '-10px'\r\n                        }}\r\n                    >\r\n                        MentSys\r\n                    </div>\r\n                    <LoginBox/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport class ActionBar extends Component {\r\n    constructor({title, back, actions = []}){\r\n        super()\r\n        this.state = {\r\n            title,\r\n            back,\r\n            actions: actions\r\n                .map(a => \r\n                    <Action \r\n                        title={a.name} \r\n                        action={a.action} \r\n                    />)\r\n        }        \r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar variant=\"dense\">\r\n                    <div className=\"back-buton\">\r\n                        {this.state.back &&\r\n                            <Action title=\"Voltar\" action={this.state.back}/>\r\n                        }\r\n                    </div>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        {this.state.title}\r\n                    </Typography>\r\n                    <div className=\"right\">\r\n                        {this.state.actions}\r\n                    </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Action extends Component {\r\n    constructor({title, action, size}){\r\n        super()\r\n        this.state = {\r\n            title,\r\n            action,\r\n            size: size || \"small\"\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div class=\"action-button\">\r\n                <Button \r\n                variant=\"outlined\" \r\n                size={this.state.size}\r\n                onClick={this.state.action}\r\n                >\r\n                    {this.state.title}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class CardTitle extends Component {\r\n    constructor({title}){\r\n        super()\r\n        this.title = title\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"card-title\">\r\n                {this.title}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar } from './ActionBar';\r\n\r\nexport class BottomActionBar extends Component {\r\n    constructor({ actions }){\r\n        super()\r\n        this.state = {\r\n            actions          \r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div\r\n                className=\"action-bar\"\r\n            >\r\n                <ActionBar actions={this.state.actions}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar } from '../../ActionBar';\r\nimport { BottomActionBar } from '../../BottomActionBar';\r\nimport { MenuCode, MainWaiting } from '../../Main';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { timeout } from '../../../Home';\r\nimport { Req } from '../../../../Components/Request';\r\n\r\nexport const TaskMode = {\r\n    SHOW: 1,\r\n    EDIT: 2\r\n}\r\n\r\nexport class TaskDetails extends Component {\r\n    constructor({main, row, mode}){\r\n        super()\r\n        this.fetchData()\r\n        //expected row = {task: {_id, title, content}}\r\n        this.state = {\r\n            loading: true,\r\n            main,\r\n            row,\r\n            mode\r\n        }\r\n    }\r\n    async fetchData(){\r\n        //GET REQUEST {loginStatus, task: {_id}}\r\n        //expected {task: {_id, title, content, imagePath}}\r\n        \r\n        await timeout(500)\r\n        const data = {\r\n            loading: false,\r\n            row: {\r\n                _id: this.state.row._id || 0,\r\n                title: this.state.row.title || 'Novo titulo',\r\n                content: this.state.row.content || 'Novo content',\r\n                startDate: new Date().toISOString().slice(0, 10),\r\n                endDate: new Date().toISOString().slice(0, 10),\r\n                imagePath: '/images/ind3.jpg'//'localhost:3000/image' + this.state.row.id\r\n            }\r\n        }\r\n\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(this.state.loading)\r\n            return <MainWaiting/>\r\n        if(this.state.mode === TaskMode.EDIT)\r\n            return <TaskDetailsEdit setMode={this.setMode.bind(this)} back={() => this.backToMain()} row={this.state.row}/>\r\n        if(this.state.mode === TaskMode.SHOW)\r\n            return <TaskDetailsShow setMode={this.setMode.bind(this)} back={() => this.backToMain()} row={this.state.row}/>\r\n        else\r\n            return <div>Error in Task details</div>\r\n    }\r\n    backToMain(){\r\n        this.state.main.setContent(MenuCode.TASK_LIST)\r\n    }\r\n    setMode(mode){\r\n        this.setState({mode})\r\n    }\r\n}\r\n\r\nclass TaskDetailsEdit extends Component {\r\n    constructor({ setMode, back, row }){\r\n        super()\r\n        this.state = {\r\n            setMode,\r\n            back,\r\n            row,\r\n            bottomAction: [\r\n                {name: 'Salvar', action: () => this.saveTask()}\r\n            ]\r\n        }\r\n        this.ref = {\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"main-diff\">\r\n                <ActionBar back={() => this.state.back()}/>\r\n                <div className=\"main-content\">\r\n                    <div className=\"task-left\">\r\n                        <div className=\"task-title\">\r\n                            <TextField\r\n                                id=\"outlined-name\"\r\n                                label=\"Título\"\r\n                                defaultValue={this.state.row.title || ''}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                onChange={e => {this.state.row.title = e.target.value}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"task-description\">\r\n                            <TextField\r\n                                className=\"full\"\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Descrição\"\r\n                                multiline\r\n                                rows=\"25\"\r\n                                defaultValue={this.state.row.content || ''}\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                onChange={e => {this.state.row.content = e.target.value}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"task-right\">\r\n                            <div style={{width: '100%', height: '30px', margin: '35px 0 0 0'}}>                    \r\n                                <TextField\r\n                                    style={{\r\n                                        margin: '10px',\r\n                                        width: '45%',\r\n                                        float: 'left'\r\n                                    }}\r\n                                    onChange={(e) => this.state.row.startDate = e.target.value}\r\n                                    id=\"date\"\r\n                                    label=\"Inicio\"\r\n                                    type=\"date\"\r\n                                    defaultValue={this.state.row.startDate || '2018-11-26'}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    style={{\r\n                                        margin: '10px',\r\n                                        width: '45%',\r\n                                        float: 'left'\r\n                                    }}\r\n                                    onChange={(e) => this.state.row.endDate = e.target.value}\r\n                                    id=\"date\"\r\n                                    label=\"Fim\"\r\n                                    type=\"date\"\r\n                                    defaultValue={this.state.row.endDate || '2018-11-26'}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"task-right-element\">\r\n                                <TextField\r\n                                    style={{width: '100%'}}\r\n                                    ref={e => this.ref.imagePath = e}\r\n                                    id=\"outlined-name\"\r\n                                    label=\"Link da imagem\"\r\n                                    defaultValue={this.state.row.imagePath || ''}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={e => {this.state.row.imagePath = e.target.value}}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                    <BottomActionBar actions={this.state.bottomAction}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    async saveTask(){\r\n        //POST REQUEST {loginStatus, task: {_id, title, content, imagePath}}\r\n        //expected {success: true | false}\r\n        \r\n        await timeout(500)\r\n        const data = {\r\n            success: true\r\n        }\r\n        if(data.success){\r\n            alert('Tarefa salva com sucesso.')\r\n            this.state.setMode(TaskMode.SHOW, this.state.row)\r\n        }\r\n        else\r\n            alert('Erro ao salvar tarefa!')\r\n        \r\n    }\r\n}\r\nclass TaskDetailsShow extends Component {\r\n    constructor({ setMode, back, row }){\r\n        super()\r\n        this.state = {\r\n            back,\r\n            row,\r\n            bottomAction: [\r\n                {name: 'Editar',action: () => setMode(TaskMode.EDIT)},\r\n                {name: 'Deletar tarefa', action: () => this.deleteTask()}\r\n            ]\r\n        }\r\n    }\r\n    async deleteTask(){\r\n        // eslint-disable-next-line no-restricted-globals\r\n        const confirmed = confirm('Tem certeza de que quer deletar a tarefa?')\r\n        if(!confirmed)\r\n            return\r\n\r\n        //POST REQUEST {loginStatus, task: {_id}}\r\n        //expected {success: true | false}\r\n\r\n        await timeout(500)\r\n        const data = {\r\n            success: true\r\n        }\r\n\r\n        if(data.success){\r\n            alert('Tarefa deletada com sucesso')\r\n            this.state.back()\r\n        }\r\n        else\r\n            alert('Não foi possivel deletar a tarefa!')\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"main-diff\">\r\n                <ActionBar back={() => this.state.back()}/>\r\n                <div  className=\"main-content\">\r\n                    <div className=\"task-left\">\r\n                        <div className=\"task-title\">\r\n                            {this.state.row.title}\r\n                        </div>\r\n                        <div className=\"task-description\">\r\n                            {this.state.row.content}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"task-right\">\r\n                        <div className=\"estimate-field\">\r\n                            Inicio <b>{this.state.row.startDate}</b>   Fim estimado: <b>{this.state.row.startDate}</b>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"task-image\" >\r\n                            <img \r\n                                src={this.state.row.imagePath} \r\n                                alt=\" Imagem não disponivel.\"></img>\r\n                        </div>\r\n                    </div>\r\n                    <BottomActionBar actions={this.state.bottomAction}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    editTask(){\r\n        this.setState({mode: TaskMode.EDIT})\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { CardTitle } from './CardTitle';\r\nimport { MenuCode } from '../../Main';\r\n\r\nimport CardM from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TaskMode } from '../Task/TaskDetails';\r\nimport { timeout } from '../../../Home';\r\n\r\nexport class Card extends Component {\r\n\r\n    constructor({main, row}){\r\n        super()\r\n        this.state = {\r\n            row,\r\n            main\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <CardM className=\"card left\">\r\n                <CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {this.state.row.title}\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                        {this.state.row.content.slice(0, 420) + '...'}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => this.showTaskDetails()}>\r\n                        Visualizar\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => this.editTaskDetails()}>\r\n                        Editar\r\n                    </Button>\r\n                </CardActions>\r\n            </CardM>\r\n        )\r\n    }\r\n    showTaskDetails = () => {        \r\n        this.state.main.setContent(MenuCode.TASK_DETAILS, this.state.row, {mode: TaskMode.SHOW})\r\n    }\r\n    editTaskDetails = () => {        \r\n        this.state.main.setContent(MenuCode.TASK_DETAILS, this.state.row, {mode: TaskMode.EDIT})\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar } from '../ActionBar'\r\nimport { Card } from './Cards/Card'\r\nimport { MenuCode, MainWaiting } from '../Main';\r\nimport { TaskMode } from './Task/TaskDetails';\r\nimport { timeout } from '../../Home';\r\n\r\nexport class TaskCards extends Component {\r\n    constructor({main}){\r\n        super()\r\n        this.fecthData()\r\n        this.state = {\r\n            loading: true,\r\n            main,\r\n            row: [],\r\n            actions: [\r\n                {name: 'Criar tarefa', action: () => this.createTask()}\r\n            ]\r\n        }\r\n    }\r\n    async fecthData(){\r\n        //GET REQUEST {loginStatus}\r\n        //expected [{task: {_id, title, content}}, ...]\r\n        \r\n        await timeout(500)\r\n        const data = {\r\n            loading: false,\r\n            row: [...Array(20).keys()]\r\n                .map(n => ({\r\n                    _id: n,\r\n                    title: 'Tarefa ' + n,\r\n                    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed molestie lacus magna, vitae mattis augue suscipit ut. Curabitur non orci nec quam laoreet porta nec in magna. Etiam fringilla lectus id quam rutrum auctor. Aliquam quis pharetra risus, id condimentum leo. Nunc mattis, nulla ac gravida rhoncus, odio elit laoreet dui, at malesuada elit purus ut massa. Integer venenatis tellus ante, a faucibus eros accumsan ut. Nulla tempus ultricies consequat.'\r\n                }))\r\n        }\r\n\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(this.state.loading)\r\n            return <MainWaiting></MainWaiting>\r\n        if(this.state.row.length === 0)\r\n            return <MainWaiting message=\"Não existem tarefas no momento.\" loading={false} ></MainWaiting>\r\n        return (\r\n            <div className=\"main-diff\">\r\n                <ActionBar title={'Tarefas Ativas'} actions={this.state.actions}/>\r\n                <div className=\"main-content\">\r\n                    {this.state.row.map(task => (\r\n                        <Card main={this.state.main} row={task}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    createTask(){\r\n        this.state.main.setContent(\r\n            MenuCode.TASK_DETAILS,\r\n            {},\r\n            {mode: TaskMode.EDIT}\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar, Action } from '../ActionBar'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MenuCode, MainWaiting } from '../Main';\r\nimport { timeout } from '../../Home';\r\n\r\nexport class PeopleManager extends Component {\r\n    constructor({title, main}){\r\n        super()\r\n        this.fetchData()\r\n        this.state = {\r\n            loading: true,\r\n            row: [],\r\n            main\r\n        }        \r\n    }\r\n    async fetchData(){\r\n        //GET REQUEST {loginStatus}\r\n        //expected [{_id, status: {name}, task: {title}, user: {name}}]\r\n\r\n        await timeout(500)\r\n        const data = {\r\n            loading: false,\r\n            row: [...Array(10).keys()]\r\n                .map(n => ({\r\n                    _id: n,\r\n                    status: {\r\n                        name: 'PENDENTE'\r\n                    },\r\n                    task: {\r\n                        title: 'Tarefa ' + n + 1\r\n                    }, \r\n                    user: {\r\n                        name: 'Guilherme'\r\n                    }\r\n                }))\r\n        }\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(this.state.loading)\r\n            return <MainWaiting></MainWaiting>\r\n        if(this.state.row.length === 0)\r\n            return <MainWaiting message=\"Não existem atividades no momento.\" loading={false}></MainWaiting>\r\n        return (\r\n            <div className=\"main-diff\">\r\n                <ActionBar title={'Central de Atividades'}/>\r\n                <div className=\"main-content\">\r\n                    <List >\r\n                        {this.state.row.map(activity => \r\n                            <PeopleLine main={this.state.main} row={activity}/>\r\n                        )}\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class PeopleLine extends Component {\r\n    constructor({ row, main }){\r\n        super()\r\n        this.state = {\r\n            main,\r\n            row       \r\n        }\r\n    }\r\n    render(){\r\n        return (            \r\n            <div>\r\n                <ListItem button className=\"task-line\">\r\n                    \r\n                    <TextField\r\n                        className=\"task-manager-title left\"\r\n                        id=\"outlined-name\"\r\n                        label=\"Tarefa\"\r\n                        value={this.state.row.task.title}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                            width: '30%',\r\n                            margin: '10px'\r\n                        }}\r\n                    />\r\n                    <ListItemIcon className=\"row-status\">\r\n                        {this.state.row.status.name}\r\n                    </ListItemIcon>\r\n                    <TextField\r\n                        className=\"task-manager-title left\"\r\n                        id=\"outlined-name\"\r\n                        label=\"Responsavel\"\r\n                        value={this.state.row.user.name}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                            width: '30%',\r\n                            margin: '10px'\r\n                        }}\r\n                    />\r\n                    <Action \r\n                        title={'MODIFICAR'} \r\n                        size={'large'} \r\n                        action={() => this.openTaskManager()}/>\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    }\r\n    openTaskManager(){\r\n        this.state.main.setContent(MenuCode.PEOPLE_DETAILS, this.state.row)\r\n    }\r\n}","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport class Graph extends React.Component {\r\n  constructor(){\r\n    super()\r\n    var xData = [\r\n      [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013],\r\n      [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013],\r\n      [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013],\r\n      [2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013]\r\n    ];\r\n    \r\n    var yData = [\r\n      [74, 82, 80, 74, 73, 72, 74, 70, 70, 66, 66, 69],\r\n      [45, 42, 50, 46, 36, 36, 34, 35, 32, 31, 31, 28],\r\n      [13, 14, 20, 24, 20, 24, 24, 40, 35, 41, 43, 50],\r\n      [18, 21, 18, 21, 16, 14, 13, 18, 17, 16, 19, 23]\r\n    ];\r\n    \r\n    var colors = ['rgba(67,67,67,1)', 'rgba(115,115,115,1)', 'rgba(49,130,189, 1)',\r\n      'rgba(189,189,189,1)'\r\n    ];\r\n    \r\n    var lineSize = [2, 2, 4, 2];\r\n    \r\n    var labels = ['Television', 'Newspaper', 'Internet', 'Radio'];\r\n    \r\n    var data = [];\r\n    \r\n    for ( var i = 0 ; i < xData.length ; i++ ) {\r\n      var result = {\r\n        x: xData[i],\r\n        y: yData[i],\r\n        type: 'scatter',\r\n        mode: 'lines',\r\n        line: {\r\n          color: colors[i],\r\n          width: lineSize[i]\r\n        }\r\n      };\r\n      var result2 = {\r\n        x: [xData[i][0], xData[i][11]],\r\n        y: [yData[i][0], yData[i][11]],\r\n        type: 'scatter',\r\n        mode: 'markers',\r\n        marker: {\r\n          color: colors[i],\r\n          size: 12\r\n        }\r\n      };\r\n      data.push(result, result2);\r\n    }\r\n    \r\n    var layout = {\r\n      showlegend: false,\r\n      xaxis: {\r\n        showline: true,\r\n        showgrid: false,\r\n        showticklabels: true,\r\n        linecolor: 'rgb(204,204,204)',\r\n        linewidth: 2,\r\n        autotick: false,\r\n        ticks: 'outside',\r\n        tickcolor: 'rgb(204,204,204)',\r\n        tickwidth: 2,\r\n        ticklen: 5,\r\n        tickfont: {\r\n          family: 'Arial',\r\n          size: 12,\r\n          color: 'rgb(82, 82, 82)'\r\n        }\r\n      },\r\n      yaxis: {\r\n        showgrid: false,\r\n        zeroline: false,\r\n        showline: false,\r\n        showticklabels: false\r\n      },\r\n      autosize: false,\r\n      margin: {\r\n        autoexpand: false,\r\n        l: 100,\r\n        r: 20,\r\n        t: 100\r\n      },\r\n      annotations: [\r\n        {\r\n          xref: 'paper',\r\n          yref: 'paper',\r\n          x: 0.0,\r\n          y: 1.05,\r\n          xanchor: 'left',\r\n          yanchor: 'bottom',\r\n          text: '',\r\n          font:{\r\n            family: 'Arial',\r\n            size: 30,\r\n            color: 'rgb(37,37,37)'\r\n          },\r\n          showarrow: false\r\n        },\r\n        {\r\n          xref: 'paper',\r\n          yref: 'paper',\r\n          x: 0.5,\r\n          y: -0.1,\r\n          xanchor: 'center',\r\n          yanchor: 'top',\r\n          showarrow: false,\r\n          font: {\r\n            family: 'Arial',\r\n            size: 12,\r\n            color: 'rgb(150,150,150)'\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    \r\n    for( var i = 0 ; i < xData.length ; i++ ) {\r\n      var result = {\r\n        xref: 'paper',\r\n        x: 0.05,\r\n        y: yData[i][0],\r\n        xanchor: 'right',\r\n        yanchor: 'middle',\r\n        text: labels[i] + ' ' + yData[i][0] +'%',\r\n        showarrow: false,\r\n        font: {\r\n          family: 'Arial',\r\n          size: 16,\r\n          color: 'black'\r\n        }\r\n      };\r\n      var result2 = {\r\n        xref: 'paper',\r\n        x: 0.95,\r\n        y: yData[i][11],\r\n        xanchor: 'left',\r\n        yanchor: 'middle',\r\n        text: yData[i][11] +'%',\r\n        font: {\r\n          family: 'Arial',\r\n          size: 16,\r\n          color: 'black'\r\n        },\r\n        showarrow: false\r\n      };\r\n    \r\n      layout.annotations.push(result, result2);\r\n    }   \r\n    \r\n    this.state = {\r\n      data,\r\n      layout\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Plot className=\"full\"\r\n        data={this.state.data}\r\n        layout={this.state.layout}\r\n        config={{displayModeBar: false }}\r\n      />\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport CardM from '@material-ui/core/Card';\r\n\r\nexport class InfoCard extends React.Component {\r\n    constructor({ bars }){\r\n        super()\r\n        this.state = {\r\n            bars\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (      \r\n            <CardM className=\"info-card\">\r\n                {this.state.bars.map(b => <BarInfo name ={b.name} value={b.value}/>)}\r\n            </CardM>\r\n        )\r\n    }\r\n}\r\n\r\nclass BarInfo extends Component{\r\n    constructor({ value, name }){\r\n        super()\r\n        this.state = {\r\n            name,\r\n            value\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"info-bar\">\r\n                    <div className=\"info-bar-value\">\r\n                        {this.state.value}\r\n                    </div>\r\n                <div className=\"info-bar-status\"\r\n                    style={{\r\n                        height: this.state.value + '%'\r\n                    }}\r\n                >\r\n                    <div className='info-bar-title'>\r\n                        {this.state.name}\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar } from '../ActionBar';\r\nimport { Graph } from './Graph';\r\nimport CardM from '@material-ui/core/Card';\r\nimport { InfoCard } from './InfoCard';\r\nimport { timeout } from '../../Home';\r\nimport { MainWaiting } from '../Main';\r\n\r\nexport class News extends Component {\r\n    constructor(){\r\n        super()\r\n        this.fetchData()\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    async fetchData(){\r\n        //GET REQUEST {loginStatus}\r\n        //expected {bars: [{name, value}, ...]}\r\n        await timeout(500)\r\n        const data = {\r\n            loading: false,\r\n            row: {\r\n                bars: [\r\n                    {name: 'Tarefas', value: 63},\r\n                    {name: 'Atividades', value: 900},\r\n                    {name: 'Alertas', value: 20},\r\n                ]\r\n            }\r\n        }\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(this.state.loading)\r\n            return <MainWaiting/>\r\n        return (            \r\n            <div className=\"main-diff\">\r\n                <ActionBar title={'Novidades'} actions={[]}/>\r\n                <div className=\"main-content\">\r\n                    <InfoCard bars={this.state.row.bars}/>\r\n                    <CardM className=\"graph-card center-margin\">\r\n                        <Graph/>\r\n                    </CardM>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport SelectUI from '@material-ui/core/Select';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass SimpleSelect extends React.Component {\r\n  constructor({title, value, options}){\r\n    super()\r\n    this.state = {\r\n      title,\r\n      age: value,\r\n      name: 'hai',\r\n      labelWidth: 0,\r\n      options\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">        \r\n        <FormControl \r\n            style={{width: '80%'}} \r\n            variant=\"outlined\" \r\n            className={classes.formControl}>\r\n          <InputLabel\r\n            ref={ref => {\r\n              this.InputLabelRef = ref;\r\n            }}\r\n            htmlFor=\"outlined-age-simple\"\r\n          >\r\n            {this.state.title}\r\n          </InputLabel>\r\n          <SelectUI\r\n            value={this.state.age}\r\n            onChange={this.handleChange}\r\n            input={\r\n              <OutlinedInput\r\n                labelWidth={this.state.labelWidth}\r\n                name=\"age\"\r\n                id=\"outlined-age-simple\"\r\n              />\r\n            }\r\n          >\r\n            {this.state.options.map(o => \r\n              <MenuItem value={o._id}>{o.name}</MenuItem>  \r\n            )}\r\n          </SelectUI>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const Select = withStyles(styles)(SimpleSelect);","import React, { Component } from 'react'\r\nimport { ActionBar } from '../ActionBar';\r\nimport { MenuCode, MainWaiting } from '../Main';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Select } from '../../../Components/Select';\r\nimport { BottomActionBar } from '../BottomActionBar';\r\nimport { timeout } from '../../Home';\r\n\r\nexport class ActivityDetails extends Component {\r\n    constructor({ main, row }){\r\n        super()\r\n        this.fetchData()\r\n        //expected row: {_id, status: {name}, task: {title}, user: {name}}\r\n        this.state = {\r\n            main,\r\n            row,\r\n            status: [],\r\n            users: [],\r\n            bottomAction: [\r\n                {name: 'Salvar', action: () => this.saveTask()}\r\n            ]\r\n        }\r\n    }\r\n    async fetchData(){\r\n        //GET REQUEST {loginSatus, activity: {_id}}\r\n        //expected {activity: {_id} status: {_id}, task: {_id} title, startDate, endDate}, user: {_id}}}\r\n\r\n        //GET REQUEST {}\r\n        //expected {status: [{_id} name}, ...]}\r\n        \r\n        //GET REQUEST {}\r\n        //expected {users: [{_id} name}, ...]}\r\n\r\n        await timeout(500)\r\n        const data = {\r\n            row: {\r\n                _id: 55, \r\n                status: {_id: 1}, \r\n                task: {\r\n                    _id: 33, \r\n                    title: 'titulo',\r\n                    startDate: new Date().toISOString().slice(0, 10),\r\n                    endDate: new Date().toISOString().slice(0, 10)\r\n                }, \r\n                user: {\r\n                    _id: 1\r\n                }\r\n            },\r\n            status: [\r\n                {_id: 0, name: 'PENDENTE'},\r\n                {_id: 1, name: 'ATRASADO'},\r\n                {_id: 2, name: 'CONCLUIDO'}\r\n            ],\r\n            users: [\r\n                {_id: 0, name: 'Guilherme'},\r\n                {_id: 1, name: 'Gabriel'},\r\n                {_id: 2, name: 'Amanda'},\r\n            ]\r\n        }\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(this.state.status.length === 0 || this.state.users.length === 0)\r\n            return <MainWaiting/>\r\n        this.status = <Select className=\"left\" title='Status' value={this.state.row.status._id} options={this.state.status}/>\r\n        this.user = <Select className=\"left\" title='Responsavel' value={this.state.row.user._id} options={this.state.users}/>\r\n        \r\n        return (\r\n            <div className=\"main-diff\">\r\n                <ActionBar title=\"Propriedades da Atividade\"\r\n                    back={() => this.back()}\r\n                />\r\n                <div className=\"main-content\">\r\n                    <div style={{margin: '0 60px 0 20px'}}>\r\n                        {this.status}\r\n                        <TextField\r\n                                style={{\r\n                                    margin: '10px',\r\n                                    width: '80%'\r\n                                }}\r\n                            className=\"task-manager-title left\"\r\n                            id=\"outlined-name\"\r\n                            label=\"Tarefa\"\r\n                            value={this.state.row.task.title}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={e => {this.state.row.task.title = e.target.value}}\r\n                        />\r\n                        <div>\r\n                            <TextField\r\n                                style={{\r\n                                    margin: '10px',\r\n                                    width: '38%'\r\n                                }}\r\n                                onChange={(e) => this.state.row.task.startDate = e.target.value}\r\n                                id=\"date\"\r\n                                label=\"Inicio\"\r\n                                type=\"date\"\r\n                                defaultValue={this.state.row.task.startDate}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                style={{\r\n                                    margin: '10px',\r\n                                    width: '38%'\r\n                                }}\r\n                                onChange={(e) => this.state.row.task.endDate = e.target.value}\r\n                                id=\"date\"\r\n                                label=\"Fim\"\r\n                                type=\"date\"\r\n                                defaultValue={this.state.row.task.endDate}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                            {this.user}\r\n                        </div>\r\n                    </div>\r\n                    <BottomActionBar actions={this.state.bottomAction}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    back(){\r\n        this.state.main.setContent(MenuCode.PEOPLE_LIST)\r\n    }\r\n    async saveTask(){\r\n        //POST REQUEST {loginStatus, activity: {_id} status: {_id}, task: {_id} startDate, endDate}, user: {_id}}}\r\n        //expected {success: true | false}\r\n\r\n        await timeout(500)\r\n        const data = {\r\n            success: true\r\n        }\r\n        if(data.success){\r\n            alert('Atividade salva com sucesso.')\r\n        }\r\n        else\r\n            alert('Erro ao salvar atividade!')\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar, Action } from '../ActionBar'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { timeout } from '../../Home';\r\nimport { MainWaiting } from '../Main';\r\n\r\nexport class AlertManager extends Component {\r\n    constructor(){\r\n        super()\r\n        this.fetchDta()\r\n        this.state = {\r\n            loading: true,\r\n            row: []\r\n        }        \r\n    }\r\n    async fetchDta(){\r\n        //GET REQUEST {loginStatus}\r\n        //expected {alerts: [{reason, task: {_id, name}, status: {name},...]}\r\n        \r\n        await timeout(500)\r\n        const data = {\r\n            loading: false,\r\n            row: \r\n                [...Array(0 | (5 + Math.random() * 10)).keys()]\r\n                    .map(n => ({\r\n                        reason: 'Passou do prazo', \r\n                        task: {\r\n                            _id: n, \r\n                            name: 'Tarefa ' + n\r\n                        }, \r\n                        status: {\r\n                            name: 'GRAVE'\r\n                        }\r\n                    }))\r\n        }\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(this.state.loading)\r\n            return <MainWaiting></MainWaiting>\r\n        if(this.state.row.length === 0)\r\n            return <MainWaiting message=\"Não existem alertas no momento.\" loading={false}></MainWaiting>\r\n        return (\r\n            <div className=\"main-diff\">\r\n                <ActionBar title={'Central de Alertas'}/>\r\n                <div className=\"main-content\">\r\n                    <List >\r\n                        {this.state.row.map(() => (\r\n                            <Alert/>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Alert extends Component {\r\n    constructor({ }){\r\n        super()\r\n        this.state = {\r\n            row: {\r\n                status: 'GRAVE',\r\n                task: 'Primeira Tarefa',\r\n                reason: 'Passou do prazo'\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return (            \r\n            <div>\r\n                <ListItem button className=\"task-line\">\r\n                    \r\n                    <TextField\r\n                        className=\"task-manager-title left\"\r\n                        id=\"outlined-name\"\r\n                        label=\"Motivo\"\r\n                        value={this.state.row.reason}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                            width: '30%',\r\n                            margin: '10px'\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        className=\"task-manager-title left\"\r\n                        id=\"outlined-name\"\r\n                        label=\"Tarefa\"\r\n                        value={this.state.row.task}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                            width: '30%',\r\n                            margin: '10px'\r\n                        }}\r\n                    />\r\n                    <ListItemIcon className=\"row-status\">\r\n                        {this.state.row.status}\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { ActionBar } from '../ActionBar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { BottomActionBar } from '../BottomActionBar';\r\nimport { timeout } from '../../Home';\r\nimport { MainWaiting } from '../Main';\r\n\r\nexport class UserStatus extends Component {\r\n    constructor({ row }){\r\n        super()\r\n        this.fetchData()\r\n        this.state = {\r\n            row: {},\r\n            actions: [\r\n                {name: 'Salvar', action: () => this.saveUserInfo()}\r\n            ]\r\n        }\r\n    }\r\n    async fetchData(){\r\n        //GET REQUEST {loginStatus}\r\n        //expected {name, lastName, email, phone}\r\n\r\n        await timeout(500)\r\n        const data = {\r\n            row: {\r\n                name:'Guilherme',\r\n                lastName: 'Rocha',\r\n                email: 'email@email.com',\r\n                phone: '41 99002222'\r\n            }\r\n        }\r\n        this.setState(data)\r\n    }\r\n    render(){\r\n        if(!this.state.row.name || !this.state.row.lastName || !this.state.row.email || !this.state.row.phone)\r\n            return <MainWaiting/>\r\n        return (            \r\n            <div className=\"main-diff\">\r\n                <ActionBar title={'Informações Pessoais'} actions={[]}/>\r\n                <div className=\"main-content\">\r\n                <TextField\r\n                    className=\"task-manager-title left\"\r\n                    id=\"outlined-name\"\r\n                    label=\"Nome\"\r\n                    value={this.state.row.name || ''}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                        width: '40%',\r\n                        margin: '10px'\r\n                    }}\r\n                    onChange={e => {\r\n                        const newState = this.state.row || {}\r\n                        newState.name = e.target.value\r\n                        this.setState(newState)\r\n                    }}\r\n                /> \r\n                <TextField\r\n                    className=\"task-manager-title left\"\r\n                    id=\"outlined-name\"\r\n                    label=\"Sobrenome\"\r\n                    value={this.state.row.lastName || ''}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                        width: '40%',\r\n                        margin: '10px'\r\n                    }}\r\n                    onChange={e => {\r\n                        const newState = this.state.row || {}\r\n                        newState.lastName = e.target.value\r\n                        this.setState(newState)\r\n                    }}\r\n                />\r\n                <TextField\r\n                        className=\"task-manager-title left\"\r\n                        id=\"outlined-name\"\r\n                        label=\"Email\"\r\n                        value={this.state.row.email || ''}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                            width: '40%',\r\n                            margin: '10px'\r\n                        }}\r\n                        onChange={e => {\r\n                            const newState = this.state.row || {}\r\n                            newState.email = e.target.value\r\n                            this.setState(newState)\r\n                        }}\r\n                    /> \r\n                <TextField\r\n                        className=\"task-manager-title left\"\r\n                        id=\"outlined-name\"\r\n                        label=\"Teleone\"\r\n                        value={this.state.row.phone || ''}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        style={{\r\n                            width: '40%',\r\n                            margin: '10px'\r\n                        }}\r\n                        onChange={e => {\r\n                            const newState = this.state.row || {}\r\n                            newState.phone = e.target.value\r\n                            this.setState(newState)\r\n                        }}\r\n                    /> \r\n                    <BottomActionBar actions={this.state.actions}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    async saveUserInfo(){\r\n        //POST REQUEST {loginStatus, {name, lastName, email, phone}}\r\n        //expected {success: true | false}\r\n\r\n        await timeout(500)\r\n        const data = {\r\n            success: true\r\n        }\r\n        if(data.success)\r\n            alert('Informções salvas com sucesso.')\r\n        else\r\n            alert('Erro ao salvar informações!')\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { TaskCards } from './Tasks/TaskCards';\r\nimport { TaskDetails } from './Tasks/Task/TaskDetails';\r\nimport { PeopleManager } from './Activitys/ActivityManager';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { News } from './News/News';\r\nimport { ActivityDetails } from './Activitys/ActivityDetails';\r\nimport { AlertManager } from './Alerts/AlertManager';\r\nimport { UserStatus } from './Status/UserStatus';\r\nimport { ActionBar } from './ActionBar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport const MenuCode = {\r\n    NEWS: 1,\r\n\r\n    TASK_LIST: 2,\r\n    TASK_DETAILS: 3,\r\n\r\n    PEOPLE_LIST: 4,    \r\n    PEOPLE_DETAILS: 5,\r\n    \r\n    ALERT_LIST: 6,\r\n\r\n    STATUS: 8\r\n}\r\n\r\nexport class Main extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            menuCode: MenuCode.NEWS\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <Grid className=\"main-container right bounceInLeft\" ref=\"main\">\r\n                <div className=\"main\">\r\n                    {this.getMainScreen()}\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n    setContent(menuCode, row, options){\r\n        this.setState({menuCode, row, options})\r\n    }\r\n    getMainScreen(){\r\n        switch(this.state.menuCode){\r\n            case MenuCode.NEWS:\r\n                return <News/>\r\n            case MenuCode.TASK_LIST: \r\n                return <TaskCards main={this}/>\r\n            case MenuCode.TASK_DETAILS: \r\n                return <TaskDetails main={this} row={this.state.row} mode={this.state.options.mode}/>\r\n            case MenuCode.PEOPLE_LIST:\r\n                return <PeopleManager main={this}/>\r\n            case MenuCode.PEOPLE_DETAILS:\r\n                return <ActivityDetails main={this} row={this.state.row}/>\r\n            case MenuCode.ALERT_LIST:\r\n                return <AlertManager/>\r\n            case MenuCode.STATUS:\r\n                return <UserStatus/>\r\n            default: \r\n                return <div>Error</div>\r\n        }\r\n    }\r\n}\r\n\r\nexport class MainWaiting extends Component{\r\n    constructor({ message, loading = true}){\r\n        super()\r\n        this.state = {\r\n            message: message || 'Carregando',\r\n            loading\r\n        }\r\n    }\r\n    render(){        \r\n        return (\r\n        <div className=\"main-diff\">\r\n            <ActionBar/>\r\n            <div className=\"main-content center-message\">\r\n                {this.state.loading && <CircularProgress/>}\r\n                <div style={{margin: '20px'}}>\r\n                    {this.state.message}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { MenuCode } from '../Main/Main';\r\n\r\nexport class SideMenu extends Component{\r\n    constructor({home}){\r\n        super()\r\n        const optionsData = [\r\n            {nome: 'Novidades', menuCode: MenuCode.NEWS},\r\n            {nome: 'Tarefas', menuCode: MenuCode.TASK_LIST},\r\n            {nome: 'Atividades', menuCode: MenuCode.PEOPLE_LIST},\r\n            {nome: 'Alertas', menuCode: MenuCode.ALERT_LIST},\r\n            {nome: 'Status', menuCode: MenuCode.STATUS},\r\n        ]\r\n        this.state = {\r\n            optionsData,\r\n            home,\r\n            options: optionsData\r\n                .map(o => \r\n                    <MenuOption \r\n                        selectOption={() => this.selectOption(o.menuCode)} \r\n                        name={o.nome} \r\n                        menuCode={o.menuCode}\r\n                        selected={false}\r\n                />)\r\n        }\r\n    }\r\n    selectOption(menuCode){\r\n        /*const options = this.state.optionsData\r\n        .map(o => \r\n            <MenuOption \r\n                selectOption={() => this.selectOption(o.menuCode)} \r\n                name={o.nome} \r\n                menuCode={o.menuCode}\r\n                selected={true}\r\n        />)\r\n        this.setState({options})*/\r\n        if(this.state.home.main)\r\n            this.state.home.main.setContent(menuCode)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"side-menu left\">\r\n                <List>\r\n                <Divider />\r\n                    {this.state.options}\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass MenuOption extends Component{\r\n    constructor({ selectOption, name, menuCode, selected }){\r\n        super()\r\n        this.state = {\r\n            selectOption,\r\n            name,\r\n            menuCode,\r\n            selected\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div onClick={this.state.selectOption}>\r\n                <ListItem \r\n                    button\r\n                    selected={this.state.selected}\r\n                    >\r\n                    <ListItemIcon>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={this.state.name} />\r\n                </ListItem>\r\n                <Divider/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  React, { Component } from 'react'\r\nimport { Header } from './Header/Header'\r\nimport { SideMenu } from './SideMenu/SideMenu';\r\nimport { Main } from './Main/Main';\r\n\r\nexport class Home extends Component { \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Header/>\r\n        </div>\r\n        <div className=\"content\">\r\n            <SideMenu home={this}/>\r\n            <Main ref={e => this.main = e}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport function timeout(time){\r\n  return new Promise(r => setTimeout(r, time))\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Home } from './Home/Home';\r\nimport './index.css'    //https://getmdl.io/\r\nimport 'typeface-roboto';\r\n//import './animate.css'  //https://daneden.github.io/animate.css/\r\n\r\nReactDOM.render(\r\n    <Home />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}